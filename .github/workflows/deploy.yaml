name: Deploy to K3s

on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Convert repository name to lowercase
        id: repo-name
        run: |
          echo "REPO_LOWER=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ env.REPO_LOWER }}/frontend
            ghcr.io/${{ env.REPO_LOWER }}/backend

      - name: Build and push Frontend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: frontend/Dockerfile.prod
          push: true
          tags: ghcr.io/${{ env.REPO_LOWER }}/frontend:latest
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push Backend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: backend/Dockerfile.prod
          push: true
          tags: ghcr.io/${{ env.REPO_LOWER }}/backend:latest
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.PI_SSH_PRIVATE_KEY }}

      - name: Test SSH Connection
        env:
          PI_HOST: ${{ secrets.PI_HOST }}
          PI_USERNAME: ${{ secrets.PI_USERNAME }}
        run: |
          # Enable verbose SSH output
          set -x
          
          # Create .ssh directory
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          
          # Add host key
          ssh-keyscan -H $PI_HOST >> ~/.ssh/authorized_keys 2>/dev/null
          
          # Test SSH connection
          ssh -v $PI_USERNAME@$PI_HOST "echo 'SSH connection successful'"

      - name: Deploy to K3s
        if: success()
        env:
          PI_HOST: ${{ secrets.PI_HOST }}
          PI_USERNAME: ${{ secrets.PI_USERNAME }}
        run: |
          # Enable error handling
          set -e
          
          echo "Creating deployment directory..."
          ssh $PI_USERNAME@$PI_HOST "mkdir -p ~/k3s-deployment"
          
          echo "Copying k3s configuration files..."
          scp -v -r k3s/* $PI_USERNAME@$PI_HOST:~/k3s-deployment/
          
          echo "Applying kubernetes configurations..."
          ssh $PI_USERNAME@$PI_HOST "cd ~/k3s-deployment && \
            kubectl apply -f config/secrets.yaml && \
            kubectl apply -f apps/"
