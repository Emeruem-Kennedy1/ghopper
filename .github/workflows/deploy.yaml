name: Deploy to K3s

on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Convert repository name to lowercase
        id: repo-name
        run: |
          echo "REPO_LOWER=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ env.REPO_LOWER }}/frontend
            ghcr.io/${{ env.REPO_LOWER }}/backend

      - name: Build and push Frontend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: frontend/Dockerfile.prod
          push: true
          tags: ghcr.io/${{ env.REPO_LOWER }}/frontend:latest
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push Backend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: backend/Dockerfile.prod
          push: true
          tags: ghcr.io/${{ env.REPO_LOWER }}/backend:latest
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Set up kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
          
          # Modify kubeconfig to skip TLS verification
          yq eval '.clusters[].cluster.insecure-skip-tls-verify = true' -i $HOME/.kube/config
          yq eval 'del(.clusters[].cluster.certificate-authority-data)' -i $HOME/.kube/config

      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod a+x /usr/local/bin/yq

      - name: Verify kubectl configuration
        run: KUBECONFIG=$HOME/.kube/config kubectl get nodes --insecure-skip-tls-verify

      - name: Deploy to k3s
        run: |
          # Apply secrets first
          kubectl apply -f k3s/config/secrets.yaml --insecure-skip-tls-verify
          
          # Apply all other resources
          kubectl apply -f k3s/apps/ --insecure-skip-tls-verify
          
          # Wait for deployments to roll out
          kubectl -n default rollout status deployment/frontend --insecure-skip-tls-verify
          kubectl -n default rollout status deployment/backend --insecure-skip-tls-verify

      - name: Verify deployments
        run: |
          echo "Checking deployment status..."
          kubectl get deployments --insecure-skip-tls-verify
          
          echo "Checking pods status..."
          kubectl get pods --insecure-skip-tls-verify
